# Resolve react_native_pods.rb with node to allow for hoisting
require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")

platform :ios, min_ios_version_supported
prepare_react_native_project!

$EnableCoreMLDelegate=true

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'ASL' do
  config = use_native_modules!
  use_expo_modules!

  pod 'MediaPipeTasksVision', '0.10.14'

  if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'
    config_command = ['node', '-e', "process.argv=['', '', 'config'];require('@react-native-community/cli').run()"];
  else
    config_command = [
      'npx',
      'expo-modules-autolinking',
      'react-native-config',
      '--json',
      '--platform',
      'ios'
    ]
  end

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  # target 'handlandmarksTests' do
  #   inherit! :complete
  #   # Pods for testing
  # end

  post_install do |installer|
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      # :ccache_enabled => true
    )
  end
end


# require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
# require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")

# require 'json'
# podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

# ENV['RCT_NEW_ARCH_ENABLED'] = '0' if podfile_properties['newArchEnabled'] == 'false'
# ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']

# platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'
# install! 'cocoapods',
#   :deterministic_uuids => false

# prepare_react_native_project!

# target 'ASL' do
#   config = use_expo_modules!

#   pod 'MediaPipeTasksVision', '0.10.14'

  # if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'
  #   config_command = ['node', '-e', "process.argv=['', '', 'config'];require('@react-native-community/cli').run()"];
  # else
  #   config_command = [
  #     'npx',
  #     'expo-modules-autolinking',
  #     'react-native-config',
  #     '--json',
  #     '--platform',
  #     'ios'
  #   ]
  # end

#   config = use_native_modules!(config_command)

#   use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']
#   use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']

#   use_react_native!(
#     :path => config[:reactNativePath],
#     :hermes_enabled => podfile_properties['expo.jsEngine'] == nil || podfile_properties['expo.jsEngine'] == 'hermes',
#     # An absolute path to your application root.
#     :app_path => "#{Pod::Config.instance.installation_root}/..",
#     :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',
#   )

#   post_install do |installer|
#     react_native_post_install(
#       installer,
#       config[:reactNativePath],
#       :mac_catalyst_enabled => false,
#       :ccache_enabled => podfile_properties['apple.ccacheEnabled'] == 'true',
#     )

#     # This is necessary for Xcode 14, because it signs resource bundles by default
#     # when building for devices.
#     installer.target_installation_results.pod_target_installation_results
#       .each do |pod_name, target_installation_result|
#       target_installation_result.resource_bundle_targets.each do |resource_bundle_target|
#         resource_bundle_target.build_configurations.each do |config|
#           config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
#         end
#       end
#     end
#   end
# end
